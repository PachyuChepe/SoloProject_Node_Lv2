---
openapi: 3.0.0
info:
  title: 사용자 관리 API
  description: "이 API는 회원가입, 로그인, 로그아웃, 사용자 정보 검색, 업데이트 및 삭제와 같은 사용자 작업을 처리합니다."
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/PachyuChepe/Solo_Node_Lv2/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080
  description: 개발 서버
tags:
- name: Users
  description: 회원 관련 엔드포인트
paths:
  /signup:
    post:
      tags:
      - Users
      summary: 사용자 회원가입
      description: 새로운 사용자가 가입할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signup_body'
        required: true
      responses:
        "201":
          description: 사용자가 성공적으로 생성됨
        "400":
          description: 잘못된 요청
        "409":
          description: 이미 사용 중인 이메일
  /login:
    post:
      tags:
      - Users
      summary: 사용자 로그인
      description: 사용자가 로그인할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: 로그인 성공
        "401":
          description: 잘못된 자격 증명
        "400":
          description: 잘못된 요청
  /logout:
    post:
      tags:
      - Users
      summary: 사용자 로그아웃
      description: 현재 사용자를 로그아웃합니다.
      responses:
        "200":
          description: 로그아웃 성공
  /me:
    get:
      tags:
      - Users
      summary: 사용자 정보 가져오기
      description: 현재 인증된 사용자의 정보를 검색합니다.
      responses:
        "200":
          description: 사용자 정보가 성공적으로 검색됨
        "404":
          description: 사용자를 찾을 수 없음
        "400":
          description: 잘못된 요청
      security:
      - bearerAuth: []
  /users/{id}:
    put:
      tags:
      - Users
      summary: 사용자 정보 업데이트
      description: 특정 사용자의 정보를 업데이트합니다.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users_id_body'
        required: true
      responses:
        "200":
          description: 사용자 정보가 성공적으로 업데이트됨
        "404":
          description: 사용자를 찾을 수 없음
        "400":
          description: 잘못된 요청
      security:
      - bearerAuth: []
    delete:
      tags:
      - Users
      summary: 사용자 삭제
      description: 특정 사용자를 삭제합니다.
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: 사용자가 성공적으로 삭제됨
        "404":
          description: 사용자를 찾을 수 없음
        "400":
          description: 잘못된 요청
components:
  schemas:
    login_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    users_id_body:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    signup_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
        name:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
