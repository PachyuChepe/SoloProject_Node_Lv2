---
openapi: 3.0.0
info:
  title: 사용자 관리 API
  description: "이 API는 회원가입, 로그인, 로그아웃, 사용자 정보 검색, 업데이트 및 삭제와 같은 사용자 작업을 처리합니다."
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/PachyuChepe/Solo_Node_Lv2/1.0.0
  description: SwaggerHub API Auto Mocking
- url: http://localhost:8080
  description: 개발 서버
tags:
- name: Users
  description: 회원 관련 엔드포인트
- name: Products
  description: 상품 관련 엔드포인트
paths:
  /signup:
    post:
      tags:
      - Users
      summary: 사용자 회원가입
      description: 새로운 사용자가 가입할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signup_body'
        required: true
      responses:
        "201":
          description: 회원 가입 완료
        "400":
          description: "잘못된 요청 - 요청 데이터의 누락, 형식 오류, 또는 기준 미충족."
        "409":
          description: 이미 사용 중인 이메일
        "500":
          description: 내부 서버 오류
  /login:
    post:
      tags:
      - Users
      summary: 사용자 로그인
      description: 사용자가 로그인할 수 있습니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: 로그인 성공
        "401":
          description: 인증 실패 - 사용자 불일치 또는 잘못된 비밀번호.
        "500":
          description: 내부 서버 오류
  /logout:
    post:
      tags:
      - Users
      summary: 사용자 로그아웃
      description: 현재 사용자를 로그아웃합니다.
      responses:
        "200":
          description: 로그아웃 성공
      security:
      - bearerAuth: []
  /user:
    get:
      tags:
      - Users
      summary: 사용자 정보 가져오기
      description: 현재 인증된 사용자의 정보를 검색합니다.
      responses:
        "200":
          description: 사용자 정보가 성공적으로 검색됨
        "404":
          description: 사용자 정보를 찾을 수 없습니다
        "500":
          description: 내부 서버 오류
      security:
      - bearerAuth: []
    put:
      tags:
      - Users
      summary: 사용자 정보 업데이트
      description: 특정 사용자의 정보를 업데이트합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_body'
        required: true
      responses:
        "200":
          description: 사용자 정보가 성공적으로 업데이트되었습니다.
        "400":
          description: "비밀번호는 최소 8자 이상이며, 대소문자, 숫자, 하나 이상의 특수문자를 포함해야 합니다"
        "401":
          description: 현재 비밀번호가 일치하지 않습니다.
        "404":
          description: 해당 사용자를 찾을 수 없습니다.
        "500":
          description: 내부 서버 오류
    delete:
      tags:
      - Users
      summary: 사용자 삭제
      description: 특정 사용자를 삭제합니다.
      responses:
        "204":
          description: 회원 탈퇴가 성공적으로 처리되었습니다.
        "404":
          description: 사용자를 찾을 수 없습니다.
        "500":
          description: 내부 서버 오류
      security:
      - bearerAuth: []
  /products:
    get:
      tags:
      - Products
      summary: 상품 목록 조회
      responses:
        "200":
          description: 상품 목록을 성공적으로 조회했습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "500":
          description: 상품 목록 조회에 실패하였습니다.
  /product:
    post:
      tags:
      - Products
      summary: 상품 등록
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_body'
      responses:
        "201":
          description: 판매 상품을 등록하였습니다.
        "400":
          description: 데이터 형식이 올바르지 않습니다.
        "500":
          description: 서버에서 오류가 발생하였습니다.
  /product/{userItemId}:
    get:
      tags:
      - Products
      summary: 상품 상세 조회
      parameters:
      - name: userItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: 상품 상세 정보를 조회했습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "404":
          description: 상품이 존재하지 않습니다.
        "500":
          description: 서버에서 오류가 발생하였습니다.
    put:
      tags:
      - Products
      summary: 상품 정보 수정
      parameters:
      - name: userItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_userItemId_body'
      responses:
        "200":
          description: 상품 정보를 수정하였습니다.
        "400":
          description: 데이터 형식이 올바르지 않습니다.
        "401":
          description: 상품을 수정할 권한이 없습니다.
        "404":
          description: 상품 조회에 실패했습니다.
        "500":
          description: 서버에서 오류가 발생하였습니다.
    delete:
      tags:
      - Products
      summary: 상품 삭제
      parameters:
      - name: userItemId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product_userItemId_body_1'
      responses:
        "200":
          description: 상품을 삭제하였습니다.
        "401":
          description: 상품을 삭제할 권한이 없습니다.
        "404":
          description: 상품 조회에 실패했습니다.
        "500":
          description: 서버에서 오류가 발생하였습니다.
components:
  schemas:
    user_body:
      type: object
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
        name:
          type: string
    product_body:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        author:
          type: string
        password:
          type: string
        status:
          type: string
    login_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    product_userItemId_body_1:
      type: object
      properties:
        password:
          type: string
    inline_response_200_1:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        content:
          type: string
        author:
          type: string
        status:
          type: string
        createdAt:
          type: string
    inline_response_200:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/inline_response_200_data'
    inline_response_200_data:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        author:
          type: string
        status:
          type: string
        createdAt:
          type: string
    product_userItemId_body:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        author:
          type: string
        password:
          type: string
        status:
          type: string
    signup_body:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
        name:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
